# Use the include directive to start using this file: 
# include conf.d/*.conf;

# Upstream Block
 upstream hackazon {
    zone hackazon 64k;
    least_time header; #load balancing method
    server 177.100.10.6:8081;
    server 177.100.10.6:8082;
    server 177.100.10.6:8083;
    #sticky cookie cookie_hackazon expires=15m httponly samesite=strict secure;
    sticky learn
       create=$upstream_cookie_phpsessid
       lookup=$cookie_phpsessid
       zone=client_sessions:1m
       timeout=1h
       sync; # Disable when no cluster configured.
  }

 upstream hackazon-bridging {
    zone hackazon 64k;
    least_time header; #load balancing method
    server 177.100.10.6:7443;
    server 177.100.10.6:8443;
    server 177.100.10.6:9443;
    #sticky cookie cookie_hackazon expires=15m httponly samesite=strict secure;
    sticky learn
       create=$upstream_cookie_phpsessid
       lookup=$cookie_phpsessid
       zone=client_sessions_bridging:1m
       timeout=1h
       sync; # Disable when no cluster configured.
  }

# Active health check or monitoring block
match monitor_server {
    status 200;
    header Content-Type ~ text/html;
    body ~ "Hackazon";
 }

# Server block with no SSL termination, serve HTTP port 80
# Enable or disable "return" command for HTTP-to-HTTPS redirection
server {
   listen 177.100.10.7:80;
   status_zone server_hackazon;
   server_name hackazon.f5labs.com;

   # Zone sync directives.
   # Enables the synchronization of shared memory zones between cluster nodes.
   # zone_sync;
   # zone_sync_server 177.100.10.5;
   
   # Content caching
   proxy_cache nginx-cache;
   proxy_cache_valid 10m;
   proxy_cache_lock on;
   proxy_cache_use_stale updating;
   #proxy_cache_key "$host$request_uri$cookie_user";

   # Compression
   # Source: https://docs.nginx.com/nginx/admin-guide/web-server/compression/
   # gzip on;
   # gzip_min_length 1000;

   # Connection & request rate limit; enable or disable when needed.
   # Refered to limit_conn_zone & limit_req_zone config on nginx.conf
   limit_conn conn_limit 10;
   limit_req zone=rate_limit;

    location / {
        return 301 https://hackazon.f5labs.com/; # HTTP-to-HTTPS redirection
        proxy_pass http://hackazon;
        #status_zone server_location_http;
        health_check fails=3 match=monitor_server mandatory persistent;
   }
}

# Server block with SSL offload, serve HTTPS port 443 and forward with HTTP protocol
server {
   listen 177.100.10.7:443 ssl;
   status_zone server_hackazon;
   server_name hackazon.f5labs.com;
   add_header Strict-Transport-Security "max-age=15552000; includeSubDomains" always; # Enable HSTS
   
   # SSL Termination
   ssl_certificate /etc/nginx/cert/wildcard.f5labs.com.pem;
   ssl_certificate_key /etc/nginx/cert/wildcard.f5labs.com.key;
   ssl_protocols TLSv1.2 TLSv1.3;
   ssl_ciphers HIGH:!aNULL:!MD5;
   
   # Content caching
   proxy_cache nginx-cache;
   proxy_cache_valid 10m;
   proxy_cache_lock on;
   proxy_cache_use_stale updating;
   #proxy_cache_key "$host$request_uri$cookie_user";

   # Compression
   # Source: https://docs.nginx.com/nginx/admin-guide/web-server/compression/
   # gzip on;
   # gzip_min_length 1000;

   # Connection & request rate limit; enable or disable when needed.
   # Refered to limit_conn_zone & limit_req_zone config on nginx.conf
   #limit_conn conn_limit 10;
   #limit_req zone=rate_limit;

    location / {
        proxy_pass http://hackazon;
        status_zone server_location_http;
        health_check fails=3 match=monitor_server mandatory persistent;
   }

    location /api/ {
        api write=on;
    }
}

# Server block with SSL bridging, serve and forward traffic with HTTPS protocol
server {
   listen 177.100.10.7:443 ssl;
   status_zone server_hackazon-bridging;
   server_name hackazon-bridging.f5labs.com;
   add_header Strict-Transport-Security "max-age=15552000; includeSubDomains" always; # Enable HSTS
   
   # SSL Termination
   ssl_certificate /etc/nginx/cert/wildcard.f5labs.com.pem;
   ssl_certificate_key /etc/nginx/cert/wildcard.f5labs.com.key;
   ssl_protocols TLSv1.2 TLSv1.3;
   ssl_ciphers HIGH:!aNULL:!MD5;
   
   # Content caching
   proxy_cache nginx-cache;
   proxy_cache_valid 10m;
   proxy_cache_lock on;
   proxy_cache_use_stale updating;
   #proxy_cache_key "$host$request_uri$cookie_user";

   # Compression
   # Source: https://docs.nginx.com/nginx/admin-guide/web-server/compression/
   # gzip on;
   # gzip_min_length 1000;

   # Connection & request rate limit; enable or disable when needed.
   # Refered to limit_conn_zone & limit_req_zone config on nginx.conf
   limit_conn conn_limit 10;
   limit_req zone=rate_limit;

    location / {
        proxy_pass https://hackazon-bridging;
        #status_zone server_location_http;
        health_check fails=3 match=monitor_server mandatory persistent;
   }
}
